// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";
import "./libs/shim/expect.js";

export let options = { maxRedirects: 4 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options
});

export default function() {
  postman[Request]({
    name: "register",
    id: "39e340f4-3557-480a-b001-d6db4fa659b0",
    method: "POST",
    address: "{{url_post}}/register/",
    data:
      '{\r\n"username": "{{UserName}}",\r\n"email": "{{Email}}",\r\n"email2": "{{Email}}",\r\n"password1":"{{randonString}}",\r\n"password2": "{{randonString}}",\r\n"job": "myjob",\r\n"about_me": "bienvenue"\r\n}',
    pre() {
      let UserName = pm.variables.replaceIn("{{$randomUserName}}");
      pm.environment.set("UserName", UserName);

      let Email = pm.variables.replaceIn("{{$randomEmail}}");
      pm.environment.set("Email", Email);

      function randomString(length = 1) {
        let randomString = "";
        for (let i = 0; i < length; i++) {
          randomString += pm.variables.replaceIn("{{$randomAlphaNumeric}}");
        }
        return randomString;
      }

      STRING_LEN = 10;
      pm.environment.set("randomString", randomString(STRING_LEN));
    },
    post(response) {
      pm.test("Status code is 201", function() {
        pm.response.to.have.status(201);
      });
    }
  });

  postman[Request]({
    name: "login",
    id: "3bbed2e2-481a-4dd2-b0f3-191a87a9e7fc",
    method: "POST",
    address: "{{url_post}}/login/",
    data:
      '{\r\n"username": "{{UserName}}",\r\n"password": "{{randomString}}"\r\n}',
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("verification des clés token et refresh", () => {
        const res = pm.response.json();
        pm.expect(res).to.have.property("access");
        pm.expect(res).to.have.property("refresh");
        pm.environment.set("tokene2e", res.access);
      });
    }
  });

  postman[Request]({
    name: "me",
    id: "1767ac7e-2c42-4915-bbc2-5bbeb6b5bcaf",
    method: "GET",
    address: "{{url_post}}/me",
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("tokene2e")}`;
    }
  });

  postman[Request]({
    name: "add_comment",
    id: "c6077c3d-cff3-4949-99aa-85a8bb54dd8f",
    method: "POST",
    address: "{{url_post}}/posts/1/comments/",
    data:
      '{\r\n    "username":"dyl2.0",\r\n    "id":1,\r\n    "content":"mon super hero commentaire"\r\n}',
    post(response) {
      pm.test("Status code is 201", function() {
        pm.response.to.have.status(201);
      });

      pm.test("verification des propriétés", () => {
        let response = pm.response.json();
        pm.expect(response).to.have.property("id");
        pm.expect(response).to.have.property("user");
        pm.expect(response).to.have.property("content");
        pm.expect(response).to.have.property("created_at");
        pm.expect(response).to.have.property("post");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var]("tokene2e")}`;
    }
  });

  postman[Request]({
    name: "get_comment",
    id: "92341c11-919a-4418-b355-2a9f8acdb1ea",
    method: "GET",
    address: "{{url_post}}/posts/",
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });
    }
  });
}
